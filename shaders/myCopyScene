#include "scene.h"
#include "ui_scene.h"

Scene::Scene(QWidget *parent) : QOpenGLWidget(parent), ui(new Ui::Scene)
{
    ui->setupUi(this);

    axisVerticesVector.push_back(QVector3D{ 0, 0, 0});
    axisVerticesVector.push_back(QVector3D{ 1, 0, 0});
    axisVerticesVector.push_back(QVector3D{10, 0, 0});
    axisVerticesVector.push_back(QVector3D{ 1, 0, 0});
    axisVerticesVector.push_back(QVector3D{ 0, 0, 0});
    axisVerticesVector.push_back(QVector3D{ 0, 1, 0});
    axisVerticesVector.push_back(QVector3D{ 0,10, 0});
    axisVerticesVector.push_back(QVector3D{ 0, 1, 0});
    axisVerticesVector.push_back(QVector3D{ 0, 0, 0});
    axisVerticesVector.push_back(QVector3D{ 0, 0, 1});
    axisVerticesVector.push_back(QVector3D{ 0, 0,10});
    axisVerticesVector.push_back(QVector3D{ 0, 0, 1});
}

Scene::~Scene()
{
    delete ui;
}
void Scene::initializeGL()
{
    initializeOpenGLFunctions();

    glClearColor(0.0, 0.73, 0.82, 1.0);

    glEnable(GL_DEPTH_TEST);
    glEnable(GL_CULL_FACE);

    initializeAxis();
    initializeShader();

    update();
}
void Scene::paintGL()
{
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);

    axisVAO->bind();
    axisShader->bind();

    glPointSize(5.0);
    glDrawArrays(GL_LINES, 0, axisVerticesVector.length());

}
void Scene::resizeGL(int, int)
{}
void Scene::mousePressEvent(QMouseEvent *event)
{
    qDebug()<<"nacisnąłeś";
}
void Scene::mouseMoveEvent(QMouseEvent *event)
{
    qDebug()<<"ruszasz";
}

void Scene::initializeAxis()
{
    axisVAO->create();
    axisVAO->bind();

    axisVertexBuffer->create();
    axisVertexBuffer->bind();
    axisVertexBuffer->allocate(axisVerticesVector.data(), axisVerticesVector.length()*sizeof(QVector3D));

    glEnableVertexAttribArray(0);
    glEnableVertexAttribArray(1);
    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, 6 * sizeof(GLfloat), 0);
    glVertexAttribPointer(1, 3, GL_FLOAT, GL_FALSE, 6 * sizeof(GLfloat), reinterpret_cast<void *>(3 * sizeof(GLfloat)));
}
void Scene::initializeShader()
{
    axisShader->create();
    axisShader->addShaderFromSourceFile(QOpenGLShader::Vertex, "/home/adam/Desktop/projects/ScannerPC_mk0/shaders/vertexaxis.vert");
    axisShader->addShaderFromSourceFile(QOpenGLShader::Fragment, "/home/adam/Desktop/projects/ScannerPC_mk0/shaders/fragmentaxis.frag");
    axisShader->bindAttributeLocation("position", 0);
    axisShader->bindAttributeLocation("color",  1);
    axisShader->link();
    axisShader->bind();
}
void Scene::refreshCamera()
{}

